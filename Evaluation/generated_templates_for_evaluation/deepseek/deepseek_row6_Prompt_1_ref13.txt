tosca_definitions_version: alien4cloud-1.3

topology_template:
  description: Kubernetes Cluster Setup
  node_templates:
    master_server:
      type: tosca.nodes.Compute
      properties:
        os: ubuntu
        network_name: private
        docker_engine: true
        kubernetes_master: true
        dns_domain: kubernetes.local

      interfaces:
        Standard:
          configure: |
            apt-get update && apt-get install -y docker.io
            systemctl start docker
            systemctl enable docker
            curl -sfL https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -
            echo "deb http://apt.kubernetes.io/ kubernetes-xenial main" > /etc/apt/sources.list.d/kubernetes.list
            apt-get update && apt-get install -y kubeadm
            kubeadm init --apiserver-advertise-address=<%this.networks.private.address%> --pod-network-cidr=10.244.0.0/16
            mkdir -p $HOME/.kube
            cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
            chown $(id -u):$(id -g) $HOME/.kube/config
            kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml
            kubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/master/aio/quickstart.yaml

      relationships:
        - type: tosca.relationships.Network
          target: private_network
          properties:
            network_name: private

    worker_node:
      type: tosca.nodes.Compute
      properties:
        os: ubuntu
        network_name: private
        docker_engine: true
        kubernetes_worker: true

      interfaces:
        Standard:
          configure: |
            apt-get update && apt-get install -y docker.io
            systemctl start docker
            systemctl enable docker
            curl -sfL https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -
            echo "deb http://apt.kubernetes.io/ kubernetes-xenial main" > /etc/apt/sources.list.d/kubernetes.list
            apt-get update && apt-get install -y kubeadm
            kubeadm join --discovery-token abcdef.1234567890abcdef <master_private_ip>

      relationships:
        - type: tosca.relationships.Network
          target: private_network
          properties:
            network_name: private

    private_network:
      type: tosca.nodes.network.Network
      properties:
        network_name: private

    kubernetes_cluster:
      type: tosca.nodes.Kubernetes.Cluster
      properties:
        name: kubernetes-cluster
        version: 1.21.0
        networking:
          type: flannel
          etcd:
            endpoints: <master_private_ip>

      relationships:
        - type: tosca.relationships.Kubernetes
          target: master_server
        - type: tosca.relationships.Kubernetes
          target: worker_node

    etcd_cluster:
      type: tosca.nodes.database.Etcd
      properties:
        version: 3.4.13
        endpoints: <master_private_ip>

      relationships:
        - type: tosca.relationships.Database
          target: master_server

    flannel_network:
      type: tosca.nodes.network.NetworkOverlay
      properties:
        type: flannel
        etcd_endpoints: <etcd_cluster.endpoints>

      relationships:
        - type: tosca.relationships.NetworkOverlay
          target: private_network

    kubernetes_dashboard:
      type: tosca.nodes.WebApplication.Kubernetes.Dashboard
      properties:
        namespace: kube-system
        ingress:
          enabled: true
          annotations:
            nginx.ingress.kubernetes.io/ssl-redirect: "false"
          rules:
          - host: dashboard.kubernetes.local
            http:
              paths:
              - path: /
                backend:
                  serviceName: kubernetes-dashboard
                  servicePort: 80

      relationships:
        - type: tosca.relationships.WebApplication
          target: master_server

  policies:
    - kubernetes_scaling_policy:
        type: tosca.policies.Scaling
        properties:
          scaling_target: worker_node
          min_instances: 1
          max_instances: 5
          scaling_in_cool_down: 300
          scaling_out_cool_down: 300

  outputs:
    dashboard_url:
      value: http://dashboard.kubernetes.local
    api_endpoint:
      value: <% master_server.networks.private.address %>:6443
