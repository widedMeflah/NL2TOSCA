tosca_definitions_version: tosca_simple_yaml_1_3

metadata:
  template_name: GalaxyDockerOnSingleVM
  template_author: INDIGO-AHP
  template_version: 1.0.0
  description: >
    Deploys a Galaxy application using a Docker image on a single virtual machine,
    including a MySQL database with encrypted storage. Provides configuration
    options for instance flavor, storage size, admin email, API key, and
    reference data installation.

imports:
  - tosca_normative_types: "1.3"

topology_template:
  inputs:
    instance_flavor:
      type: string
      description: The compute instance flavor (e.g., "m1.medium", "standard.2x4").
      required: true
    storage_size:
      type: scalar-unit.size
      description: The size of the encrypted storage volume for MySQL (e.g., "50 GB", "100 GiB").
      required: true
      constraints:
        - greater_than: 0 GB
    galaxy_admin_email:
      type: string
      description: The email address for the Galaxy admin user.
      required: true
      constraints:
        - pattern: "^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$"
    galaxy_api_key:
      type: string
      description: An API key to be set for the Galaxy admin user and used for the database password.
      required: true
      constraints:
        - min_length: 16
    install_reference_data:
      type: boolean
      description: Whether to enable the installation of basic reference data within Galaxy.
      default: false
      required: false

  node_templates:
    compute_host:
      type: tosca.nodes.Compute
      properties:
        os_type: linux
        flavor_name: { get_input: instance_flavor }
      capabilities:
        scalable:
          properties:
            min_instances: 1
            max_instances: 1
        endpoint:
          properties:
            protocol: tcp
            port: 8080
            private_address: true
            public_address: true

    mysql_data_volume:
      type: tosca.nodes.BlockStorage
      properties:
        size: { get_input: storage_size }
        encrypted: true
      requirements:
        - host: compute_host

    mysql_db_container:
      type: tosca.nodes.Container.Application.Docker
      description: Docker container running the MySQL database for Galaxy.
      properties:
        image: mysql:8.0
        container_port: 3306
        environment_variables:
          MYSQL_ROOT_PASSWORD: { get_input: galaxy_api_key }
          MYSQL_DATABASE: galaxy
          MYSQL_USER: galaxy
          MYSQL_PASSWORD: { get_input: galaxy_api_key }
        volumes:
          - /var/lib/mysql
      requirements:
        - host: compute_host
        - binds_to:
            node: mysql_data_volume
            relationship: tosca.relationships.AttachesTo # Explicitly use AttachesTo for BlockStorage binding
            properties:
              location: /var/lib/mysql # Mount path within the container

    galaxy_app_container:
      type: tosca.nodes.Container.Application.Docker
      description: Docker container running the Galaxy application.
      properties:
        image: galaxyproject/galaxy:release_23.1
        container_port: 80
        host_port: 8080
        environment_variables:
          GALAXY_ADMIN_EMAIL: { get_input: galaxy_admin_email }
          GALAXY_API_KEY: { get_input: galaxy_api_key }
          GALAXY_CONFIG_DB_URL:
            concat:
              - "mysql://galaxy:"
              - { get_input: galaxy_api_key }
              - "@mysql_db_container:3306/galaxy"
          GALAXY_INSTALL_REFERENCE_DATA: { get_input: install_reference_data }
      requirements:
        - host: compute_host
        - depends_on: mysql_db_container

  outputs:
    galaxy_application_url:
      description: The URL to access the deployed Galaxy application.
      value:
        concat:
          - "http://"
          - { get_attribute: [compute_host, public_address] }
          - ":"
          - "8080"
    galaxy_admin_api_key:
      description: The API key for the Galaxy admin user.
      value: { get_input: galaxy_api_key }
