tosca_definitions_version: tosca_simple_profile_for_nfv_1_0_0

description: Deployment of a Galaxy application using Docker on a single virtual machine with MySQL database, encrypted storage, and configuration options.

topology_template:
  node_templates:

    vm:
      type: tosca.nodes.nfv.Vdu.Compute
      properties:
        name: galaxy-vm
        description: Virtual machine hosting the Galaxy application and MySQL database.
        instance_flavor_id: { get_input: instance_flavor }
        storage_size: { get_input: storage_size }
        encryption: true
        admin_email: { get_input: admin_email }
        api_key: { get_input: api_key }

      interfaces:
        Standard:
          configure:
            implementation: scripts/configure_vm.sh
            inputs:
              admin_email: { get_input: admin_email }
              api_key: { get_input: api_key }
              install_reference_data: { get_input: install_reference_data }

      requirements:
        - host: 
            node: tosca.nodes.nfv.Ec2Compute
            relationship: tosca.relationships.HostedOn

    galaxy_container:
      type: tosca.nodes.Container.Docker
      properties:
        name: galaxy-container
        image: galaxyproject/galaxy:latest
        environment:
          GALAXY_CONFIG_ADMIN_EMAIL: { get_input: admin_email }
          GALAXY_CONFIG_API_KEY: { get_input: api_key }
          GALAXY_CONFIG_INSTALL_REFERENCE_DATA: { get_input: install_reference_data }

      interfaces:
        Standard:
          configure:
            implementation: scripts/configure_galaxy.sh
            inputs:
              admin_email: { get_input: admin_email }
              api_key: { get_input: api_key }

      requirements:
        - host:
            node: vm
            relationship: tosca.relationships.ContainerHostedOn

    mysql_container:
      type: tosca.nodes.Container.Docker
      properties:
        name: mysql-container
        image: mysql:5.7
        environment:
          MYSQL_ROOT_PASSWORD: galaxy_root
          MYSQL_DATABASE: galaxy
          MYSQL_USER: galaxy_user
          MYSQL_PASSWORD: galaxy_pass

      interfaces:
        Standard:
          configure:
            implementation: scripts/configure_mysql.sh

      requirements:
        - host:
            node: vm
            relationship: tosca.relationships.ContainerHostedOn

    volume_galaxy_data:
      type: tosca.nodes.BlockStorage
      properties:
        name: galaxy-data-volume
        size: { get_input: storage_size }
        encryption: true
        mount_point: /data/galaxy

      interfaces:
        Standard:
          configure:
            implementation: scripts/mount_volume.sh

      requirements:
        - attached_to:
            node: vm
            relationship: tosca.relationships.AttachedTo

    volume_mysql_data:
      type: tosca.nodes.BlockStorage
      properties:
        name: mysql-data-volume
        size: { get_input: storage_size }
        encryption: true
        mount_point: /var/lib/mysql

      interfaces:
        Standard:
          configure:
            implementation: scripts/mount_volume.sh

      requirements:
        - attached_to:
            node: vm
            relationship: tosca.relationships.AttachedTo

inputs:
  instance_flavor:
    type: string
    description: The flavor of the virtual machine instance.
  storage_size:
    type: integer
    description: The size of the storage in gigabytes.
  admin_email:
    type: string
    description: The email address for the Galaxy admin.
  api_key:
    type: string
    description: The API key for the Galaxy application.
  install_reference_data:
    type: boolean
    description: Whether to install reference data.
