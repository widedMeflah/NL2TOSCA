tosca_definitions_version: tosca_simple_yaml_1_0

imports:
  - indigo_custom_types: https://raw.githubusercontent.com/indigo-dc/tosca-types/master/custom_types.yaml

description: TOSCA template for deploying an Elastic Computing Cluster with Galaxy Portal

topology_template:
  inputs:
    admin_email:
      type: string
      description: Galaxy admin email
      default: "admin@admin.com"
    admin_api_key:
      type: string
      description: Galaxy admin API key
      default: "ADMIN_API_KEY"
    number_cpus:
      type: integer
      description: Number of CPUs for the front-end node
      default: 4
    memory_size:
      type: string
      description: Amount of memory for the front-end node
      default: "8 GB"
    max_instances:
      type: integer
      description: Maximum number of worker instances
      default: 5

  node_templates:
    elastic_cluster_front_end:
      type: tosca.nodes.indigo.ElasticCluster
      properties:
        deployment_id: orchestrator_deployment_id
        hybrid: true

    galaxy_portal:
      type: tosca.nodes.indigo.GalaxyPortal
      properties:
        admin_email: { get_input: admin_email }
        admin_api_key: { get_input: admin_api_key }
        version: "latest"
        instance_description: "Galaxy Instance"

    lrms_front_end:
      type: tosca.nodes.indigo.LRMS.FrontEnd.Slurm
      properties:
        wn_ips: { get_attribute: [ lrms_wn, private_address ] }
      requirements:
        - host: lrms_server

    lrms_server:
      type: tosca.nodes.indigo.Compute
      capabilities:
        host:
          properties:
            num_cpus: { get_input: number_cpus }
            mem_size: { get_input: memory_size }
        os:
          properties:
            type: linux
            distribution: ubuntu
            version: "14.04"

    galaxy_worker:
      type: tosca.nodes.indigo.GalaxyWN
      properties:
        export_dir: "/export"
      requirements:
        - host: galaxy_worker_node

    galaxy_worker_node:
      type: tosca.nodes.indigo.Compute
      capabilities:
        scalable:
          properties:
            count: 1
            max_instances: { get_input: max_instances }
        host:
          properties:
            num_cpus: 2
            mem_size: "4 GB"
        os:
          properties:
            type: linux
            distribution: ubuntu
            version: "14.04"

    lrms_wn:
      type: tosca.nodes.indigo.LRMS.WorkerNode.Slurm
      properties:
        front_end_ip: { get_attribute: [ lrms_server, private_address ] }
      capabilities:
        scalable:
          properties:
            count: 1
            max_instances: { get_input: max_instances }
      requirements:
        - host: wn_node

    wn_node:
      type: tosca.nodes.indigo.Compute
      capabilities:
        scalable:
          properties:
            count: 1
            max_instances: { get_input: max_instances }
        host:
          properties:
            num_cpus: 2
            mem_size: "4 GB"
        os:
          properties:
            type: linux
            distribution: ubuntu
            version: "14.04"

  outputs:
    galaxy_url:
      value: { concat: [ 'http://', get_attribute: [ galaxy_portal, public_address ], '/galaxy' ] }
    cluster_ip:
      value: { get_attribute: [ lrms_server, public_address ] }
    cluster_creds:
      value: { get_attribute: [ lrms_server, credential ] }