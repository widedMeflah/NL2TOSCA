tosca_definitions_version: tosca_simple_yaml_1_0

imports:
  - indigo_custom_types: https://raw.githubusercontent.com/indigo-dc/tosca-types/master/custom_types.yaml

description: Galaxy SLURM cluster with customizable configuration

topology_template:
  inputs:
    num_workers:
      type: integer
      required: true
      default: 1
      description: Number of worker nodes in the cluster

    fe_cpus:
      type: integer
      required: true
      default: 4
      description: Number of CPUs for the front-end node

    fe_memory:
      type: scalar-unit.size
      required: true
      default: 8 GB
      description: Amount of memory for the front-end node

    wn_cpus:
      type: integer
      required: true
      default: 2
      description: Number of CPUs for worker nodes

    wn_memory:
      type: scalar-unit.size
      required: true
      default: 4 GB
      description: Amount of memory for worker nodes

    storage_size:
      type: scalar-unit.size
      required: true
      default: 100 GB
      description: Amount of storage to be allocated

    admin_email:
      type: string
      required: true
      description: Galaxy admin email

    admin_api_key:
      type: string
      required: true
      description: Galaxy admin API key

    galaxy_version:
      type: string
      required: true
      default: release_21.05
      description: Galaxy version to install

    instance_description:
      type: string
      required: false
      description: Description of the Galaxy instance

    ssh_public_key:
      type: string
      required: true
      description: SSH public key for access

    enable_storage_encryption:
      type: boolean
      required: false
      default: false
      description: Enable storage encryption

    cvmfs_enabled:
      type: boolean
      required: false
      default: true
      description: Enable CernVM-FS for reference data

  node_templates:
    galaxy:
      type: tosca.nodes.indigo.GalaxyPortal
      properties:
        admin_email: { get_input: admin_email }
        admin_api_key: { get_input: admin_api_key }
        version: { get_input: galaxy_version }
        instance_description: { get_input: instance_description }
        storage_encryption: { get_input: enable_storage_encryption }

    slurm_front_end:
      type: tosca.nodes.indigo.LRMS.FrontEnd.Slurm
      properties:
        hybrid_cluster: true
        wn_ips: { get_attribute: [ slurm_wn, private_address ] }
      requirements:
        - host: front_end_server

    front_end_server:
      type: tosca.nodes.indigo.Compute
      capabilities:
        host:
          properties:
            num_cpus: { get_input: fe_cpus }
            mem_size: { get_input: fe_memory }
        os:
          properties:
            type: linux
            distribution: centos
            version: 7

    slurm_wn:
      type: tosca.nodes.indigo.LRMS.WorkerNode.Slurm
      properties:
        front_end_ip: { get_attribute: [ front_end_server, private_address ] }
      capabilities:
        wn:
          properties:
            max_instances: { get_input: num_workers }
      requirements:
        - host: wn_server

    wn_server:
      type: tosca.nodes.indigo.Compute
      capabilities:
        host:
          properties:
            num_cpus: { get_input: wn_cpus }
            mem_size: { get_input: wn_memory }
        os:
          properties:
            type: linux
            distribution: centos
            version: 7

    storage:
      type: tosca.nodes.BlockStorage
      properties:
        size: { get_input: storage_size }
        device: /dev/vdb

  outputs:
    galaxy_url:
      value: { concat: [ 'http://', get_attribute: [ front_end_server, public_address ], '/galaxy/' ] }
    cluster_frontend_ip:
      value: { get_attribute: [ front_end_server, public_address ] }
    cluster_wn_ips:
      value: { get_attribute: [ slurm_wn, private_address ] }