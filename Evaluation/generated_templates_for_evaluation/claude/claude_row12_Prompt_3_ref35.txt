tosca_definitions_version: tosca_simple_yaml_1_0

imports:
  - indigo_custom_types: https://raw.githubusercontent.com/indigo-dc/tosca-types/master/custom_types.yaml

description: TOSCA template for deploying Galaxy Docker container

topology_template:
  inputs:
    admin_email:
      type: string
      description: Galaxy admin email
      default: admin@galaxy.org
    admin_api_key:
      type: string
      description: Galaxy admin API key
      default: admin
    instance_description:
      type: string
      default: "Galaxy Docker instance"
    version:
      type: string
      default: "21.05"
    reference_data:
      type: boolean
      default: false
    flavor:
      type: string
      default: "medium"
    storage_size:
      type: string
      default: "100 GB"

  node_templates:
    galaxy_portal:
      type: tosca.nodes.indigo.GalaxyPortal
      properties:
        admin_email: { get_input: admin_email }
        admin_api_key: { get_input: admin_api_key }
        version: { get_input: version }
        instance_description: { get_input: instance_description }
        reference_data: { get_input: reference_data }
      requirements:
        - host: galaxy_server

    galaxy_server:
      type: tosca.nodes.indigo.Compute
      capabilities:
        host:
          properties:
            num_cpus: 4
            mem_size: 8 GB
            disk_size: { get_input: storage_size }
        os:
          properties:
            type: linux
            distribution: ubuntu
            version: "16.04"
        endpoint:
          properties:
            network_name: PUBLIC
            ports:
              http_port:
                protocol: tcp
                source: 80
              ftp_port:
                protocol: tcp
                source: 21
              ssh_port:
                protocol: tcp
                source: 22
              luks_port:
                protocol: tcp
                source: 8200

    vault:
      type: tosca.nodes.indigo.HashiCorpVault
      properties:
        encryption_enabled: true
      requirements:
        - host: galaxy_server

    storage:
      type: tosca.nodes.BlockStorage
      properties:
        size: { get_input: storage_size }
      requirements:
        - attachment: galaxy_server

  outputs:
    galaxy_url:
      value: { concat: ['http://', get_attribute: [galaxy_server, public_address], '/galaxy/'] }
    ssh_access:
      value: { concat: ['ssh ubuntu@', get_attribute: [galaxy_server, public_address]] }