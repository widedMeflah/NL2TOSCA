tosca_definitions_version: CloudifyDslVersion_1.4

imports:
  - cloudify/types.yaml

node_types:
  galaxy_application:
    derived_from: cloudify.nodes.ApplicationRuntime

capabilities:
  virtual_machine:
    properties:
      cpu_cores: { type: integer }
      memory: { type: string, default: "2 GB" } # Example default
      disk_size_gb: { type: integer, default: 50 }

    relationships:
      - type: cloudify.relationships.contained_in
        target: virtual_machine

relationships:
  uses_public_ssh_key:
    properties:
      public_key_path: { type: string }
      galaxy_data_directory: { type: string }

node_templates:

  virtual_machine:
    type: cloudify.nodes.Compute
    properties:
      cpu_cores: { get_input: cpu_cores }
      memory: { get_input: memory }
      disk_size_gb: { default: 50, constraints: [ greater_than_or_equal_to: 50 ]}

  galaxy_application_instance:
    type: galaxy_application
    relationships:
      - type: cloudify.relationships.contained_in
        target: virtual_machine

    properties:
      version: { get_input: galaxy_version }
      description: { get_input: description }
      admin_user_email: { get_input: admin_email }
      admin_api_key: { get_input: api_key }
      reference_data_install: { default: false, type: boolean }
      galaxy_flavor: { type: string, default: "standard" }
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          inputs:
            public_ssh_key_path: { get_input: ssh_public_key_path }
            galaxy_data_directory: { get_input: data_directory_path }
            use_encryption: { get_input: use_encryption, default: false }
            vault_server_details: { get_input: vault_server_details }

inputs:

  cpu_cores:
    type: integer
    description: Number of CPU cores for the virtual machine

  memory:
    type: string
    description: Amount of RAM for the virtual machine (e.g., '2 GB')

  galaxy_version:
    type: string
    description: Version of Galaxy to install

  admin_email:
    type: string
    description: Email address for the admin user

  api_key:
    type: string
    default: ""
    description: API key for the admin user

  ssh_public_key_path:
    type: string
    default: "/path/to/public/key"
    description: Path to the public SSH key for access

  data_directory_path:
    type: string
    default: "/data/galaxy"
    description: Directory path for storing Galaxy data

  use_encryption:
    type: boolean
    default: false
    description: Whether to encrypt storage

  vault_server_details:
    type: string
    required_on_create: { condition: inputs.use_encryption }
    description: Details of the Vault server for managing encryption keys

outputs:

  instance_id:
    value: { get_attribute: [galaxy_application_instance, id] }

  admin_user_email:
    value: { get_input: admin_email }
