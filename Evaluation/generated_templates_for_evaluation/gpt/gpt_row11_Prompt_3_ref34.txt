
tosca_definitions_version: tosca_simple_yaml_1_0

description: >
  Deploy a Galaxy platform with cluster support on CentOS 7, managed by SLURM, with specified admin, security, tools, and reference data configurations.

metadata:
  template_name: ELIXIR-ITALY-Galaxy-Cluster
  template_author: user
  template_version: "1.0"

topology_template:
  inputs:
    galaxy_admin_email:
      type: string
      default: admin@admin.com
    galaxy_admin_api_key:
      type: string
      default: not_very_secret_api_key
    galaxy_version:
      type: string
      default: release_18.05
    galaxy_instance_desc:
      type: string
      default: "ELIXIR-ITALY"
    ssh_public_key:
      type: string
      default: your_ssh_public_key
    export_dir:
      type: string
      default: /export
    cluster_num_workers:
      type: integer
      default: 2
    frontend_flavor:
      type: string
      default: small
    worker_flavor:
      type: string
      default: small
    storage_size:
      type: scalar-unit.size
      default: 50 GB
    hybrid_env:
      type: boolean
      default: false
    enable_storage_encryption:
      type: boolean
      default: false
    hashicorp_vault_url:
      type: string
      default: changeit
    vault_wrapping_token:
      type: string
      default: not_a_wrapping_token
    vault_secret_path:
      type: string
      default: subject/depuuid
    vault_secret_key:
      type: string
      default: secret
    galaxy_flavor:
      type: string
      default: galaxy-no-tools
    install_reference_data:
      type: boolean
      default: true
    cvmfs_configuration:
      type: string
      default: cvmfs_preconfigured
    cvmfs_repo_name:
      type: string
      default: elixir-italy.galaxy.refdata
    cvmfs_server_url:
      type: string
      default: 90.147.102.186
    cvmfs_pubkey_file:
      type: string
      default: elixir-italy.galaxy.refdata.pub
    cvmfs_proxy_url:
      type: string
      default: DIRECT
    cvmfs_proxy_port:
      type: integer
      default: 80
    reference_data_dir:
      type: string
      default: /cvmfs

  node_templates:
    galaxy_cluster_frontend:
      type: tosca.nodes.indigo.Galaxy
      properties:
        admin_email: { get_input: galaxy_admin_email }
        admin_api_key: { get_input: galaxy_admin_api_key }
        galaxy_version: { get_input: galaxy_version }
        description: { get_input: galaxy_instance_desc }
        ssh_key: { get_input: ssh_public_key }
        flavor: { get_input: frontend_flavor }
        storage_size: { get_input: storage_size }
        hybrid_cluster: { get_input: hybrid_env }
        export_dir: { get_input: export_dir }
        galaxy_flavor: { get_input: galaxy_flavor }
        install_reference_data: { get_input: install_reference_data }
        reference_data_dir: { get_input: reference_data_dir }
        cvmfs:
          configuration: { get_input: cvmfs_configuration }
          repository: { get_input: cvmfs_repo_name }
          server: { get_input: cvmfs_server_url }
          public_key: { get_input: cvmfs_pubkey_file }
          proxy_url: { get_input: cvmfs_proxy_url }
          proxy_port: { get_input: cvmfs_proxy_port }
        enable_storage_encryption: { get_input: enable_storage_encryption }
        hashicorp_vault_server_url: { get_input: hashicorp_vault_url }
        vault_wrapping_token: { get_input: vault_wrapping_token }
        vault_secret_path: { get_input: vault_secret_path }
        vault_secret_key: { get_input: vault_secret_key }

    galaxy_cluster_w_n:
      type: tosca.nodes.indigo.Slurm.Worker
      properties:
        flavor: { get_input: worker_flavor }
        cluster_frontend: { get_node: galaxy_cluster_frontend }
      requirements:
        - host: galaxy_cluster_frontend

    galaxy_cluster:
      type: tosca.nodes.indigo.Slurm.Cluster
      properties:
        wn_number: { get_input: cluster_num_workers }
      requirements:
        - frontend: galaxy_cluster_frontend
        - wn:
            node: galaxy_cluster_w_n
            relationship: tosca.relationships.DependsOn

  outputs:
    access_instructions:
      description: >
        Confirmation email with login and passphrase instructions will be sent to the admin email provided. If no email is received after a few hours, check the spam folder.
      value: >
        "A confirmation email will be sent to { get_input: galaxy_admin_email } with instructions on passphrase (if encryption is enabled) and logging in to the new Galaxy instance."
