
tosca_definitions_version: tosca_simple_yaml_1_0

description: >
  Two-tier Wine Cellar PHP application deployment with Apache web server and MySQL database.

topology_template:
  inputs:
    db_name:
      type: string
      description: Name of the MySQL database
      default: winecellar_db
    db_user:
      type: string
      description: MySQL user
      default: wineuser
    db_password:
      type: string
      description: MySQL password
      default: winepass
    db_sql_url:
      type: string
      description: URL of the SQL file to initialize database
      default: "https://example.com/winecellar-init.sql"
    app_github_url:
      type: string
      description: GitHub repository of the PHP Wine Cellar application
      default: "https://github.com/USERNAME/wine-cellar-php.git"

  node_templates:
    web_server_vm:
      type: tosca.nodes.Compute
      capabilities:
        host:
          properties:
            num_cpus: 1
            mem_size: 1 GB
            disk_size: 10 GB
        os:
          properties:
            type: linux
            distribution: ubuntu
            version: 20.04

    mysql_db_vm:
      type: tosca.nodes.Compute
      capabilities:
        host:
          properties:
            num_cpus: 1
            mem_size: 4 GB
            disk_size: 10 GB
        os:
          properties:
            type: linux
            distribution: ubuntu
            version: 20.04

    apache_web_server:
      type: tosca.nodes.WebServer.Apache
      requirements:
        - host: web_server_vm
      properties:
        port: 80
        ssl_port: 443

    php_application:
      type: tosca.nodes.WebApplication
      requirements:
        - host: apache_web_server
        - database: mysql_database
      properties:
        url: { get_input: app_github_url }

    mysql_database:
      type: tosca.nodes.Database.MySQL
      properties:
        name: { get_input: db_name }
        user: { get_input: db_user }
        password: { get_input: db_password }
      requirements:
        - host: mysql_db_vm

    db_init:
      type: tosca.nodes.SoftwareComponent
      properties:
        install_script: |
          curl -o /tmp/init.sql { get_input: db_sql_url }
          mysql -u{ get_input: db_user } -p{ get_input: db_password } { get_input: db_name } < /tmp/init.sql
      requirements:
        - host: mysql_db_vm
        - dependency: mysql_database

    web_access_http:
      type: tosca.nodes.network.Port
      properties:
        protocol: tcp
        port: 80
        state: started
      requirements:
        - host: web_server_vm

    web_access_https:
      type: tosca.nodes.network.Port
      properties:
        protocol: tcp
        port: 443
        state: started
      requirements:
        - host: web_server_vm

  outputs:
    web_url:
      value: { concat: ["http://", { get_attribute: [ web_server_vm, public_address ] }, ":" , "80" ] }
    web_ssl_url:
      value: { concat: ["https://", { get_attribute: [ web_server_vm, public_address ] }, ":" , "443" ] }
