
tosca_definitions_version: tosca_simple_yaml_1_0

description: >
  TOSCA template for deploying a Galaxy application on a virtual machine,
  allowing customization of resources, storage, SSH access, encryption, and Galaxy app setup.

imports:
  - indigo_types: indigo_types.yaml

topology_template:
  inputs:
    cpu_cores:
      type: integer
      description: Number of vCPUs for the Galaxy instance
      default: 2
    mem_size:
      type: string
      description: Amount of RAM (e.g. 8 GB, 16 GB)
      default: 8 GB
    disk_size:
      type: string
      description: Root disk size for the VM (min 50 GB)
      default: 50 GB
      constraints:
        - valid_values: [50 GB, 100 GB, 200 GB, 500 GB]
    galaxy_version:
      type: string
      description: Version of Galaxy to install
      default: "23.0"
    galaxy_admin_email:
      type: string
      description: Email address for the Galaxy admin user
    galaxy_admin_api_key:
      type: string
      description: API key for the Galaxy admin user
    galaxy_description:
      type: string
      description: Description for the Galaxy instance
      default: "Galaxy VM instance"
    ssh_public_key:
      type: string
      description: Public SSH key for VM access
    galaxy_data_directory:
      type: string
      description: Path for storing Galaxy data
      default: "/srv/galaxy"
    storage_encrypted:
      type: boolean
      description: Whether to encrypt the data storage
      default: false
    vault_address:
      type: string
      description: Vault server address for encryption key management
      required: false
    vault_token:
      type: string
      description: Vault authentication token or credentials
      required: false
    install_reference_data:
      type: boolean
      description: Whether to install reference data
      default: false
    galaxy_flavor:
      type: string
      description: Galaxy flavor (toolset) to install
      default: "minimal"

  node_templates:

    galaxy_vm:
      type: indigo.nodes.Compute
      capabilities:
        host:
          properties:
            num_cpus: { get_input: cpu_cores }
            mem_size: { get_input: mem_size }
        os:
          properties:
            type: linux
            distribution: ubuntu
            version: 22.04
        endpoint:
          properties:
            credential:
              keys:
                public_key: { get_input: ssh_public_key }
      requirements:
        - local_storage: galaxy_data_volume

    galaxy_data_volume:
      type: indigo.nodes.BlockStorage
      properties:
        size: { get_input: disk_size }
        volume_id: "galaxy-data"
        encryption:
          enabled: { get_input: storage_encrypted }
          vault_address: { get_input: vault_address }
          vault_token: { get_input: vault_token }
      capabilities:
        attachment:
          properties:
            mountpoint: { get_input: galaxy_data_directory }

    galaxy_app:
      type: indigo.nodes.Galaxy
      properties:
        admin_email: { get_input: galaxy_admin_email }
        admin_api_key: { get_input: galaxy_admin_api_key }
        version: { get_input: galaxy_version }
        description: { get_input: galaxy_description }
        data_directory: { get_input: galaxy_data_directory }
        install_reference_data: { get_input: install_reference_data }
        flavor: { get_input: galaxy_flavor }
      requirements:
        - host: galaxy_vm
        - data_storage: galaxy_data_volume

  outputs:
    galaxy_url:
      description: URL to access the deployed Galaxy instance
      value: { get_attribute: [ galaxy_app, endpoint, url ] }
