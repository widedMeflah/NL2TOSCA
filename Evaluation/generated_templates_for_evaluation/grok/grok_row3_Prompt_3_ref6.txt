tosca_definitions_version: alien_dsl_2_0_0

metadata:
  template_name: NodecellarApplication
  template_version: 1.0.0
  template_author: Alien4Cloud User

description: TOSCA topology for deploying a Nodecellar application with Node.js and MongoDB on Linux infrastructure

imports:
  - tosca-normative-types:1.0.0-ALIEN20

node_types:
  custom.types.NodecellarApp:
    derived_from: tosca.nodes.SoftwareComponent
    properties:
      port:
        type: integer
        default: 8088
        constraints:
          - in_range: [8000, 65535]
    requirements:
      - host:
          capability: tosca.capabilities.Container
          relationship: tosca.relationships.HostedOn
      - database:
          capability: tosca.capabilities.Endpoint.Database
          relationship: tosca.relationships.ConnectsTo

topology_template:
  node_templates:
    Compute_Nodejs:
      type: tosca.nodes.Compute
      properties:
        os_arch: x86_64
        os_type: linux
        os_distribution: ubuntu
      capabilities:
        host:
          properties:
            num_cpus: 2
            mem_size: 4 GB
            disk_size: 20 GB
        os:
          properties:
            architecture: x86_64
            type: linux
            distribution: ubuntu

    Compute_MongoDB:
      type: tosca.nodes.Compute
      properties:
        os_arch: x86_64
        os_type: linux
        os_distribution: ubuntu
      capabilities:
        host:
          properties:
            num_cpus: 2
            mem_size: 4 GB
            disk_size: 20 GB
        os:
          properties:
            architecture: x86_64
            type: linux
            distribution: ubuntu

    MongoDB:
      type: tosca.nodes.Database
      properties:
        port: 27017
      requirements:
        - host:
            node: Compute_MongoDB
            capability: tosca.capabilities.Container
            relationship: tosca.relationships.HostedOn
      capabilities:
        database_endpoint:
          properties:
            protocol: tcp
            initiator: source

    Nodejs:
      type: tosca.nodes.SoftwareComponent
      requirements:
        - host:
            node: Compute_Nodejs
            capability: tosca.capabilities.Container
            relationship: tosca.relationships.HostedOn

    NodecellarApp:
      type: custom.types.NodecellarApp
      properties:
        port: 8088
      requirements:
        - host:
            node: Nodejs
            capability: tosca.capabilities.Container
            relationship: tosca.relationships.HostedOn
        - database:
            node: MongoDB
            capability: tosca.capabilities.Endpoint.Database
            relationship: tosca.relationships.ConnectsTo

    Network:
      type: tosca.nodes.Network
      properties:
        ip_version: 4
      requirements:
        - link:
            node: Compute_Nodejs
            capability: tosca.capabilities.Connectivity
            relationship: tosca.relationships.ConnectsTo

  outputs:
    nodecellar_url:
      description: URL to access the Nodecellar application
      value: { concat: ["http://", get_attribute: [Compute_Nodejs, ip_address], ":", get_property: [NodecellarApp, port]] }