tosca_definitions_version: tosca_simple_yaml_1_3

description: TOSCA description for a flexible computing environment with INDIGO orchestrator support

imports:
  - file: indigo_custom_types.yaml

topology_template:
  inputs:
    max_worker_units:
      type: integer
      description: Maximum number of worker units to be added
      default: 10
    control_unit_cpu:
      type: integer
      description: CPU power for the main control unit
      default: 4
    control_unit_memory:
      type: integer
      description: Memory in GB for the main control unit
      default: 8
    worker_unit_cpu:
      type: integer
      description: CPU power for each worker unit
      default: 2
    worker_unit_memory:
      type: integer
      description: Memory in GB for each worker unit
      default: 4
    admin_email:
      type: string
      description: Admin email for web interface login
    api_key:
      type: string
      description: API key for web interface access
    web_interface_version:
      type: string
      description: Version of the web interface
      default: "1.0.0"
    web_interface_description:
      type: string
      description: Description of the web interface
      default: "Custom Web Interface for Computing Environment"
    ssh_public_key:
      type: string
      description: SSH public key for secure access
    data_storage_location:
      type: string
      description: Location for storing system-generated data
      default: "/data/storage"

  node_templates:
    control_unit:
      type: indigo.Compute
      properties:
        cpu: { get_input: control_unit_cpu }
        memory: { get_input: control_unit_memory }
      capabilities:
        scalable:
          properties:
            min_instances: 1
            max_instances: 1
      requirements:
        - host:
            node: worker_pool
            relationship: indigo.relationships.DependsOn
        - workload_manager:
            node: workload_manager_system
            relationship: indigo.relationships.DependsOn

    worker_pool:
      type: indigo.ComputePool
      properties:
        cpu: { get_input: worker_unit_cpu }
        memory: { get_input: worker_unit_memory }
        max_instances: { get_input: max_worker_units }
        min_instances: 1
      capabilities:
        scalable:
          properties:
            min_instances: 1
            max_instances: { get_input: max_worker_units }
      requirements:
        - hybrid_support:
            node: hybrid_environment
            relationship: indigo.relationships.SupportsHybrid

    workload_manager_system:
      type: indigo.WorkloadManager
      properties:
        supported_systems:
          - Torque
          - SGE
          - Slurm
          - Condor
      requirements:
        - host:
            node: control_unit
            relationship: indigo.relationships.HostedOn

    hybrid_environment:
      type: indigo.HybridEnvironment
      properties:
        enabled: true
      requirements:
        - host:
            node: control_unit
            relationship: indigo.relationships.HostedOn

    web_interface:
      type: indigo.WebInterface
      properties:
        version: { get_input: web_interface_version }
        description: { get_input: web_interface_description }
        admin_email: { get_input: admin_email }
        api_key: { get_input: api_key }
        ssh_public_key: { get_input: ssh_public_key }
      requirements:
        - host:
            node: control_unit
            relationship: indigo.relationships.HostedOn

    data_storage:
      type: indigo.Storage
      properties:
        location: { get_input: data_storage_location }
      requirements:
        - host:
            node: control_unit
            relationship: indigo.relationships.AttachedTo

  outputs:
    system_public_url:
      description: Public URL to access the system
      value: { get_attribute: [web_interface, public_url] }
    system_credentials:
      description: Credentials for system access
      value:
        admin_email: { get_input: admin_email }
        api_key: { get_input: api_key }