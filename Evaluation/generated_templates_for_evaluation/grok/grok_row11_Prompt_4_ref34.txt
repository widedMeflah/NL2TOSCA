tosca_definitions_version: tosca_simple_yaml_1_3

description: TOSCA definition for Galaxy instance deployment with cluster support using INDIGO orchestrator

imports:
  - file: indigo_custom_types.yaml

topology_template:
  inputs:
    num_worker_nodes:
      type: integer
      description: Number of worker nodes for the Galaxy cluster
      default: 3
    galaxy_flavor:
      type: string
      description: Specific Galaxy flavor to deploy
      default: "usegalaxy"
    vault_server_url:
      type: string
      description: URL of the Vault server for secrets management
      default: "http://vault.example.com:8200"
    admin_email:
      type: string
      description: Email address for deployment confirmation
      default: "admin@example.com"

  node_templates:
    galaxy_server:
      type: indigo.nodes.GalaxyServer
      properties:
        flavor: { get_input: galaxy_flavor }
        os_image: "centos-7"
        storage_encryption: true
      requirements:
        - host: compute_master
        - secrets: vault_server
      interfaces:
        Standard:
          create:
            implementation: indigo.plugins.galaxy.install
            inputs:
              reference_data: "galaxy-reference-data"
              companion_software: ["galaxy-tools", "galaxy-workflows"]

    compute_master:
      type: indigo.nodes.Compute
      properties:
        os_image: "centos-7"
        flavor: "m1.large"
        hybrid_support: true
      capabilities:
        host:
          properties:
            num_cpus: 4
            mem_size: 8 GB

    compute_worker:
      type: indigo.nodes.Compute
      properties:
        os_image: "centos-7"
        flavor: "m1.medium"
        hybrid_support: true
      capabilities:
        host:
          properties:
            num_cpus: 2
            mem_size: 4 GB
      requirements:
        - dependency: slurm_controller

    slurm_controller:
      type: indigo.nodes.SLURMController
      properties:
        os_image: "centos-7"
      requirements:
        - host: compute_master
      interfaces:
        Standard:
          create:
            implementation: indigo.plugins.slurm.install

    slurm_worker:
      type: indigo.nodes.SLURMWorker
      properties:
        os_image: "centos-7"
      requirements:
        - host: compute_worker
        - controller: slurm_controller
      interfaces:
        Standard:
          create:
            implementation: indigo.plugins.slurm.worker_install

    vault_server:
      type: indigo.nodes.VaultServer
      properties:
        url: { get_input: vault_server_url }
      interfaces:
        Standard:
          create:
            implementation: indigo.plugins.vault.connect

    notification_service:
      type: indigo.nodes.NotificationService
      properties:
        recipient_email: { get_input: admin_email }
        message: "Galaxy deployment completed successfully."
      requirements:
        - trigger: galaxy_server
      interfaces:
        Standard:
          create:
            implementation: indigo.plugins.notification.send_email

  groups:
    worker_nodes:
      type: indigo.groups.Cluster
      properties:
        count: { get_input: num_worker_nodes }
      members: [ compute_worker, slurm_worker ]

  outputs:
    galaxy_endpoint:
      description: Endpoint URL for the deployed Galaxy instance
      value: { get_attribute: [ galaxy_server, endpoint ] }
    deployment_status:
      description: Status of the Galaxy deployment
      value: { get_attribute: [ galaxy_server, status ] }