tosca_definitions_version: alien_dsl_1_4_0

metadata:
  template_name: nodecellar-mongo-service-topology
  template_version: 2.2.0-SNAPSHOT
  template_author: alien4cloud

description: A nodecellar application topology template with nodecellar and a requirement on a mongodb that should be matched against a mongodb service.

imports:
  - mongo-types:2.2.0-SNAPSHOT
  - nodecellar-type:2.2.0-SNAPSHOT
  - nodejs-type:2.2.0-SNAPSHOT
  - tosca-normative-types:1.0.0-ALIEN20

topology_template:
  description: A Javascript Sample Application with Node.js connecting to a MongoDB as a service
  inputs:
    nocecellar_port:
      type: integer
      required: true
      default: 8088
  node_templates:
    Network:
      type: tosca.nodes.Network
      properties:
        ip_version: 4
    NodejsHost:
      type: tosca.nodes.Compute
      requirements:
        - network:
            node: Network
            capability: tosca.capabilities.Connectivity
            relationship: tosca.relationships.Network
      capabilities:
        os:
          properties:
            architecture: "x86_64"
            type: linux
    Nodejs:
      type: org.alien4cloud.nodes.Nodejs
      requirements:
        - host:
            node: NodejsHost
            capability: tosca.capabilities.Container
            relationship: tosca.relationships.HostedOn
    Nodecellar:
      type: org.alien4cloud.nodes.Nodecellar
      properties:
        port: { get_input: nocecellar_port }
      requirements:
        - host:
            node: Nodejs
            capability: tosca.capabilities.Container
            relationship: org.alien4cloud.relationships.NodecellarHostedOnNodejs
        - database:
            node: Mongod
            capability: org.alien4cloud.capabilities.endpoint.Mongo
            relationship: org.alien4cloud.relationships.NodejsConnectToMongo
    Mongod:
      type: org.alien4cloud.nodes.AbstractMongod
  outputs:
    Nodecellar_nodecellar_url:
      value: { get_attribute: [ Nodecellar, nodecellar_url ] }
